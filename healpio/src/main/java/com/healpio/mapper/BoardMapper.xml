<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.healpio.mapper.BoardMapper">

	
	<select id="getList" resultType="com.healpio.vo.BoardScrapVO">
		<![CDATA[
                SELECT *
    FROM(
    SELECT ROWNUM RN, B.*
    FROM (
        SELECT A.*, COALESCE(s.scrapCount, 0) AS scrapCount
        FROM (
            select 
                c.class_title, m.nickname, e.exercise_name
                , l.PROVINCE, l.CITY, l.DISTRICT
                , m.teacheryn, c.class_no, MAX(a.uploadpath||a.uuid||'_'||a.filename) boardFile, c.class_price
            FROM class c
            INNER JOIN member m ON c.member_no = m.member_no
            INNER JOIN exercise e ON c.exercise_no = e.exercise_no
            INNER JOIN location l ON c.class_no = l.class_no
            INNER JOIN attach a ON c.class_no = a.class_no
            WHERE c.class_no IN (
                SELECT DISTINCT a.class_no
                FROM class c
                INNER JOIN attach a ON c.class_no = a.class_no
                )
            GROUP BY 
                c.class_title, m.nickname, e.exercise_name
                , l.PROVINCE, l.CITY, l.DISTRICT
                , m.teacheryn, c.class_no, c.class_price
                having 1=1
		]]>
						<include refid="location"></include>
						<include refid="criteria"></include>
						) A
									LEFT JOIN (
			            SELECT class_no, COUNT(*) AS scrapCount
			            FROM scrap
			            GROUP BY class_no
			        ) s ON A.class_no = s.class_no
		<include refid="array"></include>
    ) B
    )
		 WHERE RN BETWEEN #{startNo} AND #{endNo} 
	</select>


	<select id="exerciseList" resultType="com.healpio.vo.ExerciseVO">
	
	select * from exercise
	
	</select>

	<select id="provinceList" resultType="com.healpio.vo.LocationVO">
	
	select distinct province from location
	
	</select>
	
		<select id="locationList" resultType="com.healpio.vo.LocationVO">
	
	select * from location
	
	</select>
	
	
	<select id="getTotalCnt" resultType="int">
		<![CDATA[
                SELECT count(*)
    FROM(
    SELECT ROWNUM RN, B.*
    FROM (
        SELECT A.*, COALESCE(s.scrapCount, 0) AS scrapCount
        FROM (
            select 
                c.class_title, m.nickname, e.exercise_name
                , l.PROVINCE, l.CITY, l.DISTRICT
                , m.teacheryn, c.class_no, MAX(a.uploadpath||a.uuid||'_'||a.filename) boardFile, c.class_price
            FROM class c
            INNER JOIN member m ON c.member_no = m.member_no
            INNER JOIN exercise e ON c.exercise_no = e.exercise_no
            INNER JOIN location l ON c.class_no = l.class_no
            INNER JOIN attach a ON c.class_no = a.class_no
            WHERE c.class_no IN (
                SELECT DISTINCT a.class_no
                FROM class c
                INNER JOIN attach a ON c.class_no = a.class_no
                )
            GROUP BY 
                c.class_title, m.nickname, e.exercise_name
                , l.PROVINCE, l.CITY, l.DISTRICT
                , m.teacheryn, c.class_no, c.class_price
                having 1=1
		]]>
						<include refid="location"></include>
						<include refid="criteria"></include>
						) A
									LEFT JOIN (
			            SELECT class_no, COUNT(*) AS scrapCount
			            FROM scrap
			            GROUP BY class_no
			        ) s ON A.class_no = s.class_no
		<include refid="array"></include>
    ) B
    )
	</select>

	<select id="scrapList" resultType="int">
		select count(*) as scrapCount
		from class c, scrap s
		where c.class_no = s.class_no
		and s.class_no = #{class_no}
	</select>

	<select id="attach" resultType="com.healpio.vo.BoardScrapVO" >
	    select a.uploadpath||a.uuid||'_'||a.filename boardFile, a.class_no
        from class c, attach a
        where c.class_no = a.class_no
	</select>



	<sql id="criteria">
		<choose>
			<when test="searchField == 'c.class_title' and searchWord != null">
				and c.class_title like '%'||#{searchWord}||'%'
			</when>
			<when test="searchField == 'm.nickname' and searchWord != null">
				and m.nickname like '%'||#{searchWord}||'%'
			</when>
		</choose>
		
		<choose>
			<when test="exercise_name != null and exercise_name != 'all'">
				and e.exercise_name like '%'||#{exercise_name}||'%'
			</when>
		</choose>

	</sql>
	
	
	
	<sql id="location">
		<choose>
   			<when test="city != null and city!= ''">
		      	and city like '%'||#{city}||'%'
		    </when>
			<when test="province != null and province != '시도 선택'">
		      	and province like '%'||#{province}||'%'
		    </when>
		</choose>
		<choose>
			<when test="district != null and district != ''">
		      	and district like '%'||#{district}||'%'
		    </when>
		</choose>
		
	</sql>

	
	<sql id="array">
		<choose>
   			<when test="dependsArray == 'recently' or dependsArray =='' or dependsArray == null "> 
		      	order by A.class_no DESC
		    </when>
   			<when test="dependsArray == 'like'">
		      	ORDER BY SCRAPCOUNT DESC, a.class_no DESC
		    </when>
		</choose>

	</sql>
	
 </mapper>


<!-- 		<choose>
			<when test="province != null and province != ''">
				and province like '%'||#{province}||'%'
			</when>
		</choose>
		
		
				
	<where>
	    <if test="province != null and province != ''">
	      	and province like '%'||#{province}||'%'
	    </if>

 	 </where>
		
		
 -->














